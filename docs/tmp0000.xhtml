<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<title>Enter your title here</title>
	</head>
	<body>
		<h1>Enter your header here</h1>
<table class = "grid">
  <tr>
   <th>Step
   </th>
   <th>User Action
   </th>
   <th>System Response (optional)
   </th>
  </tr>
  <tr>
   <td>1
   </td>
   <td>PCP launches mDATA within patient encounter on the EHR
   </td>
   <td>mDATA automatically signs in the PCP and shows the PCP screens, and pulls patient's MRN, cell phone #, and email address from the active EHR encounter session
   </td>
  </tr>
  <tr>
   <td>
   </td>
   <td>PCP submits an order via mDATA to prescribe "average daily and weekly step count between now and next visit" and is done!
   </td>
   <td>mDATA records order for daily step count, average daily steps and average weekly steps for this MRN.
   </td>
  </tr>
  <tr>
   <td rowspan="2" >2
   </td>
   <td>2a. Patient leaves the visit and is directed to the onboarding staff (aka Onboarder). The Onboarder opens an encounter for this patient (who's there in person) in the EHR or any web-enabled device and launches mDATA. The Onboarder reviews the data order, and determines whether the patient already has StepSensor or another acceptable device.

verify phone # and email ---
   </td>
   <td>mDATA automatically signs in the Onboarder, pulls in the MRN for this patient from the active encounter session, and shows the Onboarder the active order for step count for this patient, and the acceptable devices for fulfilling this order.  
   </td>
  </tr>
  <tr>
   <td><em>2.b If patient doesn't already have StepSensor</em>

The Onboarder gives the patient a new StepSensor and helps the patient set up their new StepSensor ID and password
   </td>
   <td>StepSensor creates and authenticates patient to their new StepSensor account.
   </td>
  </tr>
  <tr>
   <td>3
   </td>
   <td><strong>Downloading patient's mDATA app</strong>

(Onboarder can assist patient with these tasks)

Patient downloads mDATA app from Play or App store onto their own smartphone
   </td>
   <td>
   </td>
  </tr>
  <tr>
   <td>4
   </td>
   <td><strong>Creating a patient mDATA account</strong>

(Onboarder can assist patient with these tasks)

<span style="text-decoration:underline;">For patients with EHR patient portal credentials</span>

Patient signs into mDATA using their existing patient portal credentials.

<span style="text-decoration:underline;">For patients without EHR patient portal credentials</span>

Patient creates a new account and enters the same email they've given to the EHR. Patient receives an mDATA authentication code at the cell phone number they gave to the EHR. They enter the code and then complete the mDATA account setup by providing a password.
   </td>
   <td><span style="text-decoration:underline;">For patients with EHR patient portal credentials</span>

mDATA creates a patient mDATA account for the patient associated with the submitted portal credentials.

<span style="text-decoration:underline;">For patients without EHR patient portal credentials</span>

mDATA knows which MRN is associated with the submitted email. mDATA sends an authentication code to the cell phone associated with that MRN. Once authenticated, mDATA creates a patient mDATA account for this MRN.
   </td>
  </tr>
  <tr>
   <td>5
   </td>
   <td>Patient uses their mDATA app to connect mDATA to StepSensor using mDATA's Shimmer function: 1) mDATA shows icons including StepSensor, 2) patient taps on StepSensor, 3) mDATA brings up StepSensor's authentication screen, 4) patient enters in his/her StepSensor credentials (from Step 3a above).
   </td>
   <td>Shimmer negotiates OAuth tokens using patient's credentials for StepSensor, generates unique Shimmer User ID for the patient, and binds that Shimmer User ID to that StepSensor account

Shimmer makes the Shimmer User ID available to mDATA, which now has both the patient's MRN and the patient's Shimmer User ID. mDATA stores this mapping in its own datastore. It does not write anything to the EHR.
   </td>
  </tr>
  <tr>
   <td>6
   </td>
   <td>Patients sees in their mDATA app that they are tracking step count and can review their PCP's order. They can see their daily step counts, and average daily and weekly steps, in between clinic visits.
   </td>
   <td>mDATA displays appropriate order and step count data for this patient (see Flow 6b below for how mDATA gets this data).  
   </td>
  </tr>
</table>

##### Flow Identifier:  In-person review of already collected steps data
<table class = "grid">
<tr>
 <th>Step
 </th>
 <th>User Action
 </th>
 <th>System Response (optional)
 </th>
</tr>

  <tr>
   <td>1

   </td>
   <td>At next visit, PCP and patient are in a clinic visit. Provider launches mDATA within patient encounter on the EHR

   </td>
   <td>mDATA automatically signs in the PCP and shows the PCP screens, and pulls patient's MRN from the active EHR encounter session. mDATA accesses mDATA datastore to retrieve the Shimmer ID for this MRN (see Step 5 in flow 6a above).

   </td>
  </tr>
  <tr>
   <td rowspan="4" >2

   </td>
   <td rowspan="4" >Provider's mDATA app displays mHealth data from active mHealth data order for this patient (daily and average daily and weekly step counts since last visit).

Patient and provider review the data and make clinical decisions.

   </td>
   <td>mDATA sends the patient's Shimmer User ID to the R24 server. authorization/authentication using SMART-on-FHIR protocols R24 receives Shimmer ID.

   </td>
  </tr>
  <tr>
   <td>mDATA accesses active mHealth data orders for this patient, and sends appropriate GET command to R24 server, e.g.,

GET OBSERVATION (PATIENT X, TIME PERIOD, CODE FOR THE OBSERVATION(S) (DAILY STEPS AND AVERAGE WEEKLY), CATEGORY)

   </td>
  </tr>
  <tr>
   <td>R24 server receives GET and



1.  finds the patient's data in the OMOP data store
1.  computes if needs to using the parameters in the GET command
1.  sends data back HTTP: FHIR BUNDLE that includes FHIR observations with a 200 or sends back an error 401/403
   </td>
  </tr>
  <tr>
   <td>
mDATA receives the results of the GET command from the R24 server and displays it to the provider/patient.

   </td>
  </tr>
  <tr>
   <td>6

   </td>
   <td>Provider closes the mDATA app.

   </td>
   <td>mDATA may or may not permanently store the retrieved data in the mDATA datastore.  

   </td>
  </tr>
</table>

	</body>
</html>
